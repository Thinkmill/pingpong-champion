//
// Button groups
// --------------------------------------------------

// Make the div behave like a button
.btn-group,
.btn-group-vertical {
	position: relative;
	display: inline-block;
	vertical-align: middle; // match .btn alignment given font-size hack above
	> .btn {
		position: relative;
		float: left;
		// Bring the "active" button to the front
		&:hover,
		&:focus,
		&:active,
		&.active {
			z-index: 2;
		}
		&:focus {
			// Remove focus outline when dropdown JS adds it after closing the menu
			outline: 0;
		}
	}
}

// Prevent double borders when buttons are next to each other
.btn-group {
	.btn + .btn,
	.btn + .btn-group,
	.btn-group + .btn,
	.btn-group + .btn-group {
		margin-left: -1px;
	}
}

// Optional: Group multiple button groups together for a toolbar
.btn-toolbar {
	&:extend(.clearfix all);
	margin-bottom: @panel-padding-vertical;
	margin-left: -10px; // Offset the first child's margin

	.btn-group,
	.input-group {
		float: left;
	}
	> .btn,
	> .btn-group,
	> .input-group {
		margin-left: 10px;
	}
}

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {
	border-radius: 0;
}

// Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match
.btn-group > .btn:first-child {
	margin-left: 0;
	&:not(:last-child):not(.dropdown-toggle) {
		.border-right-radius(0);
	}
}
// Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it
.btn-group > .btn:last-child:not(:first-child),
.btn-group > .dropdown-toggle:not(:first-child) {
	.border-left-radius(0);
}

// Custom edits for including btn-groups within btn-groups (useful for including dropdown buttons within a btn-group)
.btn-group > .btn-group {
	float: left;
}
.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {
	border-radius: 0;
}
.btn-group > .btn-group:first-child {
	> .btn:last-child,
	> .dropdown-toggle {
		.border-right-radius(0);
	}
}
.btn-group > .btn-group:last-child > .btn:first-child {
	.border-left-radius(0);
}

// On active and open, don't show outline
.btn-group .dropdown-toggle:active,
.btn-group.open .dropdown-toggle {
	outline: 0;
}


// Sizing
//
// Remix the default button sizing classes into new ones for easier manipulation.

.btn-group-xs > .btn { &:extend(.btn-xs); }
.btn-group-sm > .btn { &:extend(.btn-sm); }
.btn-group-lg > .btn { &:extend(.btn-lg); }


// Split button dropdowns
// ----------------------

// Give the line between buttons some depth
.btn-group > .btn + .dropdown-toggle {
	padding-left: 8px;
	padding-right: 8px;
}
.btn-group > .btn-lg + .dropdown-toggle {
	padding-left: 12px;
	padding-right: 12px;
}



// Justified button groups
// ----------------------

.btn-group-justified {
	display: table;
	width: 100%;
	table-layout: fixed;
	border-collapse: separate;
	> .btn,
	> .btn-group {
		float: none;
		display: table-cell;
		width: 1%;
	}
	> .btn-group .btn {
		width: 100%;
	}

	> .btn-group .dropdown-menu {
		left: auto;
	}
}


// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `opacity`. We cannot
// use `display: none;` or `visibility: hidden;` as that also hides the popover.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 for more.

[data-toggle="buttons"] > .btn > input[type="radio"],
[data-toggle="buttons"] > .btn > input[type="checkbox"] {
	position: absolute;
	z-index: -1;
	opacity: 0;
}
